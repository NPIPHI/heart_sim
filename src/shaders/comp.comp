#version 450

struct NodeState{
    float activation;
};

struct Adjacency{
    int neighbors[8];
};

layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer input_buffer{
    NodeState input_data[];
};

layout(std430, binding = 1) buffer output_buffer{
    NodeState output_data[];
};

layout(std430, binding = 2) buffer graph_buffer{
    Adjacency adj[];
};



void main()
{
    uint x = gl_GlobalInvocationID.x;
    uint y = gl_GlobalInvocationID.y;

    bool peaking = false;
    NodeState self = input_data[x];
    NodeState next = self;
    for(int n = 0; n < 8; n++){
        NodeState neighbor = input_data[adj[x].neighbors[n]];
        if(neighbor.activation > 0.7){
            peaking = true;
        }
    }
    if(self.activation > 0.7){
        peaking = true;
    }
    if(peaking && self.activation > 0.2){
        next.activation += 0.03;
    } else {
        if(x < 10){
            next.activation += 0.002;
        } else {
            next.activation += 0.0005;
        }
    }

    if(next.activation > 1){
        next.activation = 0;
    }

    output_data[x] = next;
}

